// Generated by CoffeeScript 1.7.1
var RestAdapter, ajax, json,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

ajax = require('ajax');

json = require('json');

RestAdapter = (function() {
  function RestAdapter(options) {
    this.aggregate = __bind(this.aggregate, this);
    this.count = __bind(this.count, this);
    this.find = __bind(this.find, this);
    this.findOne = __bind(this.findOne, this);
    this.remove = __bind(this.remove, this);
    this.update = __bind(this.update, this);
    this.create = __bind(this.create, this);
    this._end_point = __bind(this._end_point, this);
    this.initialize = __bind(this.initialize, this);
    this.name_space = (options != null ? options.name_space : void 0) || '';
    this.collection_name = options ? options.collection_name : void 0;
    this.cursor_update = void 0;
  }

  RestAdapter.prototype.initialize = function() {};

  RestAdapter.prototype._end_point = function(name) {
    var pt;
    pt = '/api/' + this.collection_name + '/';
    if (this.name_space) {
      pt += this.name_space + '/';
    }
    pt += name;
    return pt;
  };

  RestAdapter.prototype.create = function(query, cb) {
    var q;
    q = json.stringify(query);
    return ajax({
      url: this._end_point('create'),
      type: 'POST',
      dataType: 'json',
      data: {
        query: q
      },
      success: (function(_this) {
        return function(data, textStatus, jqXHR) {
          cb(data.err, data.doc);
          return _this.cursor_update();
        };
      })(this)
    });
  };

  RestAdapter.prototype.update = function(query, cb) {
    var q;
    q = json.stringify(query);
    return ajax({
      url: this._end_point('update'),
      type: 'PUT',
      dataType: 'json',
      data: {
        query: q
      },
      success: (function(_this) {
        return function(data, textStatus, jqXHR) {
          cb(data.err);
          return _this.cursor_update();
        };
      })(this)
    });
  };

  RestAdapter.prototype.remove = function(query, cb) {
    var q;
    q = json.stringify(query);
    return ajax({
      url: this._end_point('remove'),
      type: 'DELETE',
      dataType: 'json',
      data: {
        query: q
      },
      success: (function(_this) {
        return function(data, textStatus, jqXHR) {
          cb(data.err);
          return _this.cursor_update();
        };
      })(this)
    });
  };

  RestAdapter.prototype.findOne = function(query, cb) {
    var q;
    q = json.stringify(query);
    return ajax({
      url: this._end_point('findOne'),
      type: 'GET',
      dataType: 'json',
      data: {
        query: q
      },
      success: (function(_this) {
        return function(data, textStatus, jqXHR) {
          return cb(data.err, data.doc);
        };
      })(this)
    });
  };

  RestAdapter.prototype.find = function(query, cb) {
    var q;
    q = json.stringify(query);
    return ajax({
      url: this._end_point('find'),
      type: 'GET',
      dataType: 'json',
      data: {
        query: q
      },
      success: (function(_this) {
        return function(data, textStatus, jqXHR) {
          return cb(data.err, data.docs, data.options);
        };
      })(this)
    });
  };

  RestAdapter.prototype.count = function(query, cb) {
    var q;
    q = json.stringify(query);
    return ajax({
      url: this._end_point('count'),
      type: 'GET',
      dataType: 'json',
      data: {
        query: q
      },
      success: (function(_this) {
        return function(data, textStatus, jqXHR) {
          return cb(data.err, data.count);
        };
      })(this)
    });
  };

  RestAdapter.prototype.aggregate = function(query, cb) {
    var q;
    q = json.stringify(query);
    return ajax({
      url: this._end_point('aggregate'),
      type: 'GET',
      dataType: 'json',
      data: {
        query: q
      },
      success: (function(_this) {
        return function(data, textStatus, jqXHR) {
          return cb(data.err, data.docs, data.options);
        };
      })(this)
    });
  };

  return RestAdapter;

})();

module.exports = RestAdapter;
